式(expression)
b = a + 5
+ = を演算子(operator)
a b 5 をオペランド(operand)
すべての式はたった2種類の要素で構成されています。

ソースコードに直接記述されている数値5や文字'a'などの具体的な値を
リテラル(literal)と言います。
リテラルはその値に応じたデータ型を持っており、それぞれのリテラルがどの型の情報を表すのかはリテラルの表記方法で決まります。
300000L=long型　60.5F=float型　'A'=char型　"A"=String型

10進数以外の整数リテラル記法
int a = 0x11. //aには17が代入される
int b = 011. //bには9が代入される
int c = 0b0011. //cには3が代入される

文字列リテラルを記述する際にしばしば用いられるエスケープシーケンス(escape sequence)
と呼ばれる特殊記号(¥ or \)が存在します。\がいいかな。

プログラムに記述された式によって計算処理が行われることを、四季の評価(evaluation)と言います。

代入演算子　a += 2(a = a + 2)
インクリメント・デクリメント演算子　a++ (a += 1 , a = a + 1)
単項演算子＝一つしかオペランドを持たない演算子のこと。

無理な代入は意図せずにデータを破壊
し、深刻な不具合につながる可能性が高
い。すぐに原因を特定して修正するべき
である。

double型のリテラルである3.2の前に記述された(int)を、
明示的な型変更を指示するキャスト演算子(cast operator)
と言います。
気軽に用いる道具ではないという認識でいること。

命令実行の文
printf(①, ②);  //画面に情報を表示したいときに用いる最も一般的な命令です。
                         プログラムの先頭に#include <stdio.h>が必要。
                         ①には書式文字列

%で始まるプレースホルダ。
実行時にはそこに②の内容が流し込まれる。
表記はプレースホルダの表記は、流し込む型によって使い
分ける決まりになっている。
変換指定子(conversion specifier)、
書式指定子(format specifier)、
フォーマット指定子とも呼ばれるので覚えておく。

printf("%d", 123);  //表示は「123」
printf("%5d", 123);  //表示は「  123」
printf("%05d", 123);  //表示は「00123」

%の直後に表示桁数を指定すると、その桁数に満
たない部分に0やスペースが流し込まれる。